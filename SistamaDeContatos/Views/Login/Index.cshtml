@model LoginModel
@{
    Layout = "_LayoutDeslogado";
    ViewData["Title"] = "Login";
}

@if (TempData["MensagemErro"] != null)
{
    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">

        <symbol id="exclamation-triangle-fill" fill="currentColor" viewBox="0 0 16 16">
            <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z" />
        </symbol>


    </svg>

    <div class="alert alert-danger d-flex align-items-center" role="alert">
        <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill" /></svg>
        <div>
            @TempData["MensagemErro"]
        </div>
    </div>

}

<form asp-controller="Login" asp-action="Entrar" method="post">
    <div class="mb-3">
        <label for="email" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control">
        @Html.ValidationMessageFor(x => x.Login)
    </div>
    <div class="mb-3">
        <label for="senha" class="form-label">Senha</label>
        <input type="password" asp-for="Senha" class="form-control">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>
    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary">Entrar</button>
    </div>
</form>

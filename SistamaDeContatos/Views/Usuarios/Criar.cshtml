@using SistamaDeContatos.Enums;
@model UsuarioModel
@{
    ViewData["Title"] = "Criar novo usuário";
}


<div class="text-center">
    <h1 class="display=4">@ViewData["Title"]</h1>
</div>

<form asp-controller="Usuarios" asp-action="Criar" method="post">
    <div class="mb-3">
        <label for="nome" class="form-label">Nome</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Nome do usuário">
        @Html.ValidationMessageFor(x => x.Nome)
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">E-mail</label>
        <input type="email" asp-for="Email" class="form-control" placeholder="nome@example.com">
        @Html.ValidationMessageFor(x => x.Email)
    </div>
    <div class="mb-3">
        <label for="login" class="form-label">Login</label>
        <input type="text" asp-for="Login" class="form-control" placeholder="Login do usuário">
        @Html.ValidationMessageFor(x => x.Login)
    </div>
    <div class="mb-3">
        <label for="senha" class="form-label">Senha</label>
        <input type="password" asp-for="Senha" class="form-control" placeholder="Senha do usuário">
        @Html.ValidationMessageFor(x => x.Senha)
    </div>

    <div class="mb-3">
        <label for="perfil" class="form-label">Perfil</label>
        <select class="form-select" asp-for="Perfil">
            <option value="">Selecione</option>
            <option value="@PerfilEnum.Admin">Administrador</option>
            <option value="@PerfilEnum.Padrao">Padrão</option>
        </select>
        @Html.ValidationMessageFor(x => x.Perfil)
    </div>

    <br />

    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary">Adicionar</button>
        <a class="btn btn-secondary" asp-controller="Usuarios" asp-action="Index">Voltar</a>
    </div>
</form>